{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\bookapp\\\\src\\\\main\\\\frontend\\\\src\\\\components\\\\Genres.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Grommet, Box } from 'grommet';\nimport { grommet } from 'grommet/themes';\nimport { CheckBox } from \"@material-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Genres() {\n  _s();\n\n  const [checked, setChecked] = useState([]);\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    fetch('api/genres').then(response => response.json()).then(data => setData(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Grommet, {\n    theme: grommet,\n    children: data.map(item => /*#__PURE__*/_jsxDEV(Box, {\n      align: \"left\",\n      pad: \"small\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        direction: \"row\",\n        gap: \"medium\",\n        children: [/*#__PURE__*/_jsxDEV(CheckBox, {\n          checked: checked.length === data.length,\n          indeterminate: checked.length > 0 && checked.length < data.length,\n          label: \"All\",\n          onChange: onCheckAll\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CheckBox, {\n          checked: checked.includes(item.title),\n          label: item,\n          onChange: e => onCheck(e, item.title)\n        }, item, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Genres, \"gZuGB/G6iXSq+uEQhlko/2X75VY=\");\n\n_c = Genres;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Genres\");","map":{"version":3,"sources":["D:/Study/bookapp/src/main/frontend/src/components/Genres.js"],"names":["React","useEffect","useState","Grommet","Box","grommet","CheckBox","Genres","checked","setChecked","data","setData","fetch","then","response","json","map","item","length","onCheckAll","includes","title","e","onCheck"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AAEA,SAAQC,OAAR,EAAiBC,GAAjB,QAA2B,SAA3B;AACA,SAAQC,OAAR,QAAsB,gBAAtB;AACA,SAAQC,QAAR,QAAuB,oBAAvB;;AAEA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC7B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,KAAK,CAAC,YAAD,CAAL,CACKC,IADL,CACWC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADxB,EAEKF,IAFL,CAEWH,IAAD,IAAUC,OAAO,CAACD,IAAD,CAF3B;AAGH,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACI,QAAC,OAAD;AAAS,IAAA,KAAK,EAAEL,OAAhB;AAAA,cACKK,IAAI,CAACM,GAAL,CAASC,IAAI,iBACd,QAAC,GAAD;AAAK,MAAA,KAAK,EAAC,MAAX;AAAkB,MAAA,GAAG,EAAC,OAAtB;AAAA,6BACI,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,KAAf;AAAqB,QAAA,GAAG,EAAC,QAAzB;AAAA,gCACI,QAAC,QAAD;AACI,UAAA,OAAO,EAAET,OAAO,CAACU,MAAR,KAAmBR,IAAI,CAACQ,MADrC;AAEI,UAAA,aAAa,EAAEV,OAAO,CAACU,MAAR,GAAiB,CAAjB,IAAsBV,OAAO,CAACU,MAAR,GAAiBR,IAAI,CAACQ,MAF/D;AAGI,UAAA,KAAK,EAAC,KAHV;AAII,UAAA,QAAQ,EAAEC;AAJd;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOQ,QAAC,QAAD;AAEI,UAAA,OAAO,EAAEX,OAAO,CAACY,QAAR,CAAiBH,IAAI,CAACI,KAAtB,CAFb;AAGI,UAAA,KAAK,EAAEJ,IAHX;AAII,UAAA,QAAQ,EAAEK,CAAC,IAAIC,OAAO,CAACD,CAAD,EAAIL,IAAI,CAACI,KAAT;AAJ1B,WACSJ,IADT;AAAA;AAAA;AAAA;AAAA,gBAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADC;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH;;GAhCuBV,M;;KAAAA,M;AAgCvB","sourcesContent":["import React, {useEffect, useState} from 'react';\r\n\r\nimport {Grommet, Box} from 'grommet';\r\nimport {grommet} from 'grommet/themes';\r\nimport {CheckBox} from \"@material-ui/icons\";\r\n\r\nexport default function Genres() {\r\n    const [checked, setChecked] = useState([]);\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch('api/genres')\r\n            .then((response) => response.json())\r\n            .then((data) => setData(data));\r\n    }, []);\r\n\r\n    return (\r\n        <Grommet theme={grommet}>\r\n            {data.map(item => (\r\n            <Box align=\"left\" pad=\"small\">\r\n                <Box direction=\"row\" gap=\"medium\">\r\n                    <CheckBox\r\n                        checked={checked.length === data.length}\r\n                        indeterminate={checked.length > 0 && checked.length < data.length}\r\n                        label=\"All\"\r\n                        onChange={onCheckAll}\r\n                    />\r\n                        <CheckBox\r\n                            key={item}\r\n                            checked={checked.includes(item.title)}\r\n                            label={item}\r\n                            onChange={e => onCheck(e, item.title)}\r\n                        />\r\n                </Box>\r\n            </Box>\r\n            ))}\r\n        </Grommet>\r\n    );\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}